/**
 * Copyright (C) 2014 by Stefano Ceschi Berrini, @stecb
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
!function(t){"use strict";var e=1e3,s=1e3,i="msta-card",a="https://api.instagram.com/v1/tags/{{tag}}/media/recent",n="f3a1200e40454386afcf89918e8e63c0",o='<div data-refid="{{refid}}" class="'+i+' flip-container"><div class="flipper"><div class="front"></div><div class="back"><img src="{{src}}" alt="{{alt}}" /></div></div></div>',d=function(t,e,s){this.gid=Math.floor(1e11*Math.random())+1,this.gameDOM=document.createElement("div"),this.gameDOM.id="game"+this.gid,t.innerHTML="",t.appendChild(this.gameDOM),this.board=t.parentElement,this.points=0,this.tag=s,this.timeouts={resetDone:null,resetShow:null},this.options={count:"easy"===e?6:"medium"===e?10:15,client_id:n},this.board.style.display="block",this.board.classList.remove("done"),this.board.classList.remove("end"),setTimeout(function(){this.board.classList.add("playing")}.bind(this),50),this.reset()};d.prototype.checkStatus=function(){var t=document.querySelectorAll("."+i+".done");t.length===2*this.options.count&&(this.reset(),this.gameDOM.parentElement.parentElement.classList.add("done"))},d.prototype.check=function(t){var a=document.querySelectorAll("."+i+".selected");0===a.length?t.classList.add("selected"):a[0]!=t&&(t.classList.add("selected"),a[0].dataset.refid===t.dataset.refid?(this.resetting=!0,t.classList.add("memorized","animated","pulse"),t.classList.remove("selected"),a[0].classList.add("memorized","animated","pulse"),a[0].classList.remove("selected"),clearTimeout(this.timeouts.resetDone),this.timeouts.resetDone=setTimeout(function(){a[0].classList.add("done"),t.classList.add("done"),this.checkStatus(),this.resetting=!1}.bind(this),e)):(this.resetting=!0,t.classList.remove("selected"),t.classList.add("showed","animated","shake"),a[0].classList.remove("selected"),a[0].classList.add("showed","animated","shake"),clearTimeout(this.timeouts.resetShow),this.timeouts.resetShow=setTimeout(function(){a[0].classList.remove("showed","animated","shake"),t.classList.remove("showed","animated","shake"),this.resetting=!1}.bind(this),s)))},d.prototype.ready=function(){this.gameDOM.parentElement.parentElement.classList.add("ready"),this.initEvents()},d.prototype.initEvents=function(){this.gameDOM.addEventListener("click",function(t){var e=t.target.parentElement.parentElement;"DIV"===t.target.nodeName&&e.classList.contains(i)&&!e.classList.contains("memorized")&&!this.resetting&&this.check(e)}.bind(this))},d.prototype.initCards=function(t){var e=t.data,s="",a="",n=[],d=0,r=this;if("undefined"==typeof e||0===e.length)return alert("Change hash"),void(this.board.style.display="none");for(var c=0,l=e.length;l>c;c++)s=e[c].images.standard_resolution.url,a=o.replace("{{src}}",s).replace("{{alt}}",i+(c+1)).replace("{{refid}}",e[c].id),n.push(a),n.push(a);this.gameDOM.innerHTML=n.shuffle().join(""),[].slice.call(document.querySelectorAll("#board img")).forEach(function(t){t.addEventListener("load",function(){d++,d===2*r.options.count&&r.ready()})})},d.prototype.reset=function(){this.resetting=!1,this.gameDOM.parentElement.parentElement.classList.remove("ready")},d.prototype.end=function(t){this.board.classList.remove("playing"),this.board.classList.add("end"),setTimeout(function(){this.board.style.display="none",t.call()}.bind(this),1e3)},d.prototype.play=function(){var t=a.replace("{{tag}}",this.tag)+"?count="+this.options.count+"&client_id="+this.options.client_id;return jsonp(t,function(t){this.initCards(t)}.bind(this)),this},t.Game=d}(window.MSTA||this);